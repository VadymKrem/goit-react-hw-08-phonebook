{"version":3,"file":"static/js/759.47eae921.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","Redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactListItem/ContactListItem.styled.jsx","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SectionContainer = styled.section`\n  margin: auto;\n  padding: 26px 0;\n\n  background-color: #f9f9f9;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 700;\n  font-size: 34px;\n\n  text-align: center;\n  margin: 0;\n`;\n","import PropTypes from 'prop-types';\n\nimport { SectionContainer, Title } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionContainer>\n      {title && <Title>{title}</Title>}\n      {children}\n    </SectionContainer>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","// import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContactsList = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectContactsFilter = state => state.filters;\n\n// export const selectVisibleContacts = createSelector(\n//   [selectContactsList, selectContactsFilter],\n//   (contacts, filter) => {\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(filter.toLowerCase())\n//     );\n//   }\n// );\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  width: 350px;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  gap: 30px;\n  border: 2px solid black;\n  margin-bottom: 25px;\n  background-color: #ddd;\n  flex-wrap: wrap;\n  align-content: center;\n  align-item: center;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-size: 20px;\n  font-weight: 700;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-top: 10px;\n  border: 2px solid;\n  border-radius: 4px;\n  height: 20px;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  border: 2px solid grey;\n  border-radius: 2px;\n  /* background-color: inherit; */\n  background-color: #f1d50b;\n`;\n","import { Form, Label, Input, Button } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContactsList } from 'Redux/contacts/selectors';\nimport { addContact } from 'Redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n\n  const dataSubmitForm = event => {\n    event.preventDefault();\n\n    const form = event.target;\n    const formName = event.target.elements.name.value;\n    const formNumber = event.target.elements.number.value;\n\n    const searchContact = contacts.find(\n      contact => contact.name.toLowerCase() === formName\n    );\n    if (searchContact) {\n      alert(`${formName} is already in contacts`);\n      return false;\n    }\n\n    dispatch(addContact({ name: formName, number: formNumber }));\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={dataSubmitForm}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={contacts.name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={contacts.number}\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 16px;\n  font-weight: 500;\n`;\nexport const Input = styled.input`\n  width: 250px;\n  padding: 22px 36px;\n\n  color: #000000;\n  background: #efefef;\n  border-radius: 18px;\n  border-style: none;\n\n  :placeholder {\n    color: #757575;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { setContactsFilter } from 'Redux/filter/filterSlice';\nimport { selectContactsFilter } from 'Redux/contacts/selectors';\n\nimport { Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectContactsFilter);\n\n  const handleChangeFilter = ({ currentTarget: { value } }) => {\n    const normalizedValue = value.toLowerCase().trim();\n    dispatch(setContactsFilter(normalizedValue));\n  };\n\n  return (\n    <Label>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter contact name\"\n        value={filter}\n        onChange={handleChangeFilter}\n      />\n    </Label>\n  );\n};\n","import styled from '@emotion/styled';\nimport { FaUser, FaPhoneAlt, FaUserMinus } from 'react-icons/fa';\n\nexport const UserIcon = styled(FaUser)`\n  padding: 8px;\n\n  width: 20px;\n  height: 20px;\n\n  fill: #fabb18;\n\n  border-radius: 12px;\n\n  background-color: rgba(250, 187, 24, 0.1);\n`;\n\nexport const PhoneIcon = styled(FaPhoneAlt)`\n  padding: 8px;\n\n  width: 20px;\n  height: 20px;\n\n  fill: #fabb18;\n\n  border-radius: 12px;\n\n  background-color: rgba(250, 187, 24, 0.1);\n`;\n\nexport const UserDeletedIcon = styled(FaUserMinus)`\n  width: 20px;\n  height: 20px;\n\n  fill: #fabb18;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 6px;\n\n  padding: 20px 20px;\n\n  border-radius: 24px;\n  border: 1px solid rgba(0, 0, 0, 0.04);\n\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);\n`;\n\nexport const ContactName = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n\n  margin: 0;\n  font-weight: 500;\n`;\n\nexport const ContactNumber = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n\n  margin: 0;\n`;\n\nexport const Button = styled.button`\n  font-weight: 700;\n\n  display: flex;\n  align-items: center;\n  gap: 14px;\n\n  padding: 0.563em 1em;\n  background-color: #4eced0;\n\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(250, 187, 24, 0.1);\n  border-radius: 8px;\n\n  cursor: pointer;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: #000000;\n    background-color: rgba(250, 187, 24, 0.1);\n    border: 1px solid #000000;\n\n    > svg {\n      fill: #000000;\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'Redux/contacts/operations';\n\nimport {\n  ContactItem,\n  ContactName,\n  ContactNumber,\n  Button,\n  UserIcon,\n  UserDeletedIcon,\n  PhoneIcon,\n} from './ContactListItem.styled';\nimport { Notify } from 'notiflix';\n\nexport const ContactsListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = userId => {\n    dispatch(deleteContact(userId))\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(\n          `${originalPromiseResult.name} successfully deleted from contacts`\n        );\n      })\n      .catch(() => {\n        Notify.failure(\"Sorry, something's wrong\");\n      });\n  };\n\n  return (\n    <ContactItem key={id}>\n      <ContactName>\n        <UserIcon />\n        {name}\n      </ContactName>\n      <ContactNumber>\n        <PhoneIcon />\n        {number}\n      </ContactNumber>\n      <Button onClick={() => handleDeleteContact(id)}>\n        <UserDeletedIcon />\n        Delete\n      </Button>\n    </ContactItem>\n  );\n};\n\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n\n  grid-gap: 26px;\n`;\n","import { useSelector } from 'react-redux';\n\nimport {\n  selectContactsFilter,\n  selectContactsList,\n} from 'Redux/contacts/selectors';\n\nimport { ContactsListItem } from './ContactListItem/ContactListItem';\n\nimport { ContactsList } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContactsList);\n  const filter = useSelector(selectContactsFilter);\n  const visibleContacts = [\n    ...contacts.filter(contact => contact.name.toLowerCase().includes(filter)),\n  ];\n\n  return (\n    <ContactsList>\n      {visibleContacts.map(({ name, number, id }) => (\n        <ContactsListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </ContactsList>\n  );\n};\n","import styled from '@emotion/styled';\nimport { FaUserPlus } from 'react-icons/fa';\n\nexport const AddUserIcon = styled(FaUserPlus)`\n  width: 20px;\n  height: 20px;\n\n  fill: #fabb18;\n`;\nexport const ContentPageContainer = styled.div`\n  padding: 38px 48px;\n  height: 100vh;\n\n  border-radius: 32px 32px 0 0;\n  background-color: #f9f9f9;\n`;\nexport const ContactNavWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 28px;\n`;\nexport const Title = styled.h2`\n  font-weight: 700;\n  font-size: 34px;\n\n  color: #120bf4;\n\n  margin: 0;\n`;\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  margin-left: auto;\n`;\n\nexport const Form = styled.form``;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 12px;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  padding: 22px 36px;\n\n  color: #000000;\n  background: #efefef;\n  border-radius: 18px;\n  border-style: none;\n\n  :placeholder {\n    color: #757575;\n  }\n`;\n\nexport const Button = styled.button`\n  font-weight: 700;\n  font-size: 14px;\n\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  width: fit-content;\n\n  padding: 1.063em 1.5em;\n  margin-left: 28px;\n\n  background-color: #64d8f5;\n\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(250, 187, 24, 0.1);\n  border-radius: 14px;\n\n  cursor: pointer;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: #000000;\n    background-color: rgba(250, 187, 24, 0.1);\n    border: 1px solid #000000;\n    > svg {\n      fill: #000000;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(138.13deg, #22343c75 25.87%, #1f2e3572 100%);\n  z-index: 1200;\n`;\n\nexport const ModalWindow = styled.div`\n  border-radius: 25px;\n  overflow: hidden;\n\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n\n  padding-left: 30px;\n  padding-right: 30px;\n  background-color: #f9f9f9;\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { ModalWindow, Overlay } from './Modal.styled';\n\nexport const Modal = ({ children, onCloseModal }) => {\n  useEffect(() => {\n    const handleKeydown = e => {\n      if (e.code === 'Escape') {\n        onCloseModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [onCloseModal]);\n\n  const handleBackdropClick = ({ target, currentTarget }) => {\n    if (currentTarget === target) {\n      onCloseModal();\n    }\n  };\n\n  return (\n    <Overlay onClick={handleBackdropClick}>\n      <ModalWindow>{children}</ModalWindow>\n    </Overlay>\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.node,\n  onCloseModal: PropTypes.func,\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchContacts } from 'Redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'Redux/contacts/selectors';\n\nimport { Section } from '../../components/Section/Section';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport {\n  AddUserIcon,\n  Button,\n  ContactNavWrapper,\n  ContentPageContainer,\n  FilterWrapper,\n  Title,\n} from './Contacts.styled';\nimport { Modal } from 'components/Modal/Modal';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const [isShowModalAddUser, setIsShowModalAddUser] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleOpenModal = () => {\n    setIsShowModalAddUser(prev => !prev);\n  };\n\n  return (\n    <ContentPageContainer>\n      <Section>\n        <ContactNavWrapper>\n          <Title>Contacts</Title>\n          <FilterWrapper>\n            <Filter />\n            <Button type=\"button\" onClick={handleOpenModal}>\n              <AddUserIcon />\n              New Contact\n            </Button>\n          </FilterWrapper>\n        </ContactNavWrapper>\n        {isLoading && !error && <b>Request in progress</b>}\n        <ContactList />\n      </Section>\n      {isShowModalAddUser && (\n        <Modal\n          children={\n            <Section title=\"Add New Contact\">\n              <ContactForm onCloseModal={handleOpenModal} />\n            </Section>\n          }\n          onCloseModal={handleOpenModal}\n        ></Modal>\n      )}\n    </ContentPageContainer>\n  );\n};\n\nexport default Contacts;\n"],"names":["SectionContainer","styled","Title","Section","title","children","selectContactsList","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filters","Form","Label","Input","Button","ContactForm","dispatch","useDispatch","useSelector","onSubmit","event","preventDefault","form","target","formName","elements","name","value","formNumber","number","find","contact","toLowerCase","alert","addContact","reset","type","pattern","required","Filter","filter","placeholder","onChange","normalizedValue","currentTarget","trim","setContactsFilter","UserIcon","FaUser","PhoneIcon","FaPhoneAlt","UserDeletedIcon","FaUserMinus","ContactItem","ContactName","ContactNumber","ContactsListItem","id","onClick","userId","deleteContact","unwrap","then","originalPromiseResult","Notify","catch","ContactsList","ContactList","visibleContacts","includes","map","AddUserIcon","FaUserPlus","ContentPageContainer","ContactNavWrapper","FilterWrapper","Overlay","ModalWindow","Modal","onCloseModal","useEffect","handleKeydown","e","code","window","addEventListener","removeEventListener","useState","isShowModalAddUser","setIsShowModalAddUser","fetchContacts","handleOpenModal","prev"],"sourceRoot":""}